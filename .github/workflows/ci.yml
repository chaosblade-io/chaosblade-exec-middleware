name: ci

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: ${{ matrix.os }} - Test - Go ${{ matrix.go_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go_version: [ '1.25' ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - name: Set Up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go_version }}
        id: go
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Tests
        id: test
        run: |
          make test

  build-matrix:
    name: Build on ${{ matrix.os }} (${{ matrix.goos }}/${{ matrix.goarch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            platform: linux_amd64
            runner_arch: x64
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
            platform: linux_arm64
            runner_arch: arm64
          - os: macos-latest
            goos: darwin
            goarch: amd64
            platform: darwin_amd64
            runner_arch: x64
          - os: macos-latest
            goos: darwin
            goarch: arm64
            platform: darwin_arm64
            runner_arch: arm64
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的 Git 历史用于版本信息

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build ${{ matrix.platform }}
        id: build
        run: |
          make ${{ matrix.platform }}

      - name: Verify Build Output
        id: verify
        run: |
          echo "Verifying build output for ${{ matrix.platform }}..."
          ls -la target/
          BUILD_DIR=$(find target/ -name "chaosblade-*-${{ matrix.platform }}" -type d | head -1)
          if [ -n "$BUILD_DIR" ] && [ -d "$BUILD_DIR" ]; then
            echo "✅ Build directory created successfully: $BUILD_DIR"
            find "$BUILD_DIR" -type f -name "chaos_middleware*" | head -1
            find "$BUILD_DIR" -type f -name "*.yaml" | head -1
          else
            echo "❌ Build directory not found for ${{ matrix.platform }}"
            exit 1
          fi
